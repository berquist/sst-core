---
name: sst-core build/install/test

# yamllint disable-line rule:truthy
on:
  push:
  pull_request:

concurrency:
  group: build-and-test-${{github.ref}}-${{github.event.pull_request.number || github.run_number}}
  cancel-in-progress: true

jobs:
  test-cmake:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-13
          - macos-14
          - ubuntu-22.04
        build-system:
          - {name: "autotools", generator: "Make"}
          - {name: "cmake", generator: "Unix Makefiles"}
          - {name: "cmake", generator: "Ninja"}
        # Using bundled Python versions for now.
        # python-version:
        #   - "3.8"
        #   - "3.10"
        #   - "3.12"
        with-mpi:
          - true
          - false
        compiler:
          - {cc: "clang", cxx: "clang++"}
          - {cc: "gcc", cxx: "g++"}
        exclude:
          - os: macos-13
            build-system: {name: "cmake", generator: "Unix Makefiles"}
            # Not specifying "with-mpi" will exclude all "with-mpi" entries.
          - os: ubuntu-22.04
            build-system: {name: "cmake", generator: "Unix Makefiles"}
            with-mpi: false
            # Force "obvious" default compilers (gcc on Linux, clang on macOS).
          - os: macos-13
            compiler: {cc: "gcc", cxx: "g++"}
          - os: macos-14
            compiler: {cc: "gcc", cxx: "g++"}
          - os: ubuntu-22.04
            compiler: {cc: "clang", cxx: "clang++"}
    runs-on: ${{ matrix.os }}
    name: test:${{ matrix.os }}/${{ matrix.build-system.name }}-${{ matrix.build-system.generator }}/mpi-${{ matrix.with-mpi }}
    env:
      CORE_BUILD_PATH: ${{ github.workspace }}/core_build
      INSTALL_PATH: ${{ github.workspace }}/install
      SST_DISABLE_MPI_AUTOTOOLS: ${{ !matrix.with-mpi && '--disable-mpi' || '' }}
      SST_DISABLE_MPI_CMAKE: ${{ matrix.with-mpi && 'OFF' || 'ON' }}
    steps:

      - name: checkout
        uses: actions/checkout@v4

      - name: install prerequisites macOS
        run: brew install coreutils ncurses
        if: ${{ contains(matrix.os, 'macos') }}

      - name: install Autoconf Ubuntu
        run: sudo apt-get install -y libtool-bin
        if: ${{ contains(matrix.os, 'ubuntu') && matrix.build-system.name == 'autotools' }}

      - name: install Autoconf macOS
        run: brew install automake libtool
        if: ${{ contains(matrix.os, 'macos') && matrix.build-system.name == 'autotools' }}

      - name: install Ninja Ubuntu
        run: sudo apt-get install -y ninja-build
        if: ${{ contains(matrix.os, 'ubuntu') && matrix.build-system.name == 'cmake' && matrix.build-system.generator == 'Ninja' }}

      - name: install Ninja macOS
        run: brew install ninja
        if: ${{ contains(matrix.os, 'macos') && matrix.build-system.name == 'cmake' && matrix.build-system.generator == 'Ninja' }}

      - name: install OpenMPI Ubuntu
        run: sudo apt-get install -y libopenmpi-dev
        if: ${{ contains(matrix.os, 'ubuntu') && matrix.with-mpi == true }}

      - name: install OpenMPI macOS
        run: brew install open-mpi
        if: ${{ contains(matrix.os, 'macos') && matrix.with-mpi == true }}

      - name: autotools configure
        run: |
          export CC=${{ matrix.compiler.cc }}
          export CXX=${{ matrix.compiler.cxx }}
          ${{ github.workspace }}/autogen.sh
          # out-of-source build
          mkdir -p "${CORE_BUILD_PATH}"
          cd "${CORE_BUILD_PATH}"
          ${{ github.workspace }}/configure \
            --prefix="${INSTALL_PATH}" "${SST_DISABLE_MPI_AUTOTOOLS}"
        if: ${{ matrix.build-system.name == 'autotools' }}

      - name: autotools build
        run: |
          cd "${CORE_BUILD_PATH}"
          make -j "$(nproc)" all
        if: ${{ matrix.build-system.name == 'autotools' }}

      - name: autotools install
        run: |
          cd "${CORE_BUILD_PATH}"
          make -j "$(nproc)" install
        if: ${{ matrix.build-system.name == 'autotools' }}

      - name: cmake configure
        run: |
          cmake \
            -S ${{ github.workspace }}/experimental \
            -B "${CORE_BUILD_PATH}" \
            -DCMAKE_INSTALL_PREFIX="${INSTALL_PATH}" \
            -DCMAKE_C_COMPILER=${{ matrix.compiler.cc }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.compiler.cxx }} \
            -DSST_DISABLE_MPI="${SST_DISABLE_MPI_CMAKE}" \
            -G'${{ matrix.build-system.generator }}'
        if: ${{ matrix.build-system.name == 'cmake' }}

      - name: cmake build
        run: |
          cmake --build "${CORE_BUILD_PATH}" -j "$(nproc)"
        if: ${{ matrix.build-system.name == 'cmake' }}

      - name: cmake install
        run: |
          cmake --install "${CORE_BUILD_PATH}"
        if: ${{ matrix.build-system.name == 'cmake' }}

      - name: test
        run: |
          "${INSTALL_PATH}"/bin/sst-test-core
